type Post = record {
  id: nat64;
  content: text;
  author: principal;
  timestamp: nat64;
  likes: vec principal;
  visibility: text;
};

type UserProfile = record {
  user_principal: principal;
  username: text;
  avatar_url: text;
  bio: text;
};

type Comment = record {
  post_id: nat64;
  commenter: principal;
  text: text;
  timestamp: nat64;
};

type FollowResponse = variant {
  Success;
  AlreadyFollowing;
  NotFollowing;
  CannotFollowSelf;
};

service : {
  create_post: (text,text) -> (Post);
  get_all_posts: () -> (vec Post) query;

  register_user: (text, text, text) -> ();
  get_my_profile: () -> (opt UserProfile) query;
  update_profile: (text, text, text) -> ();

  toggle_like_post: (nat64) -> (opt Post);

  add_comment: (nat64, text) -> ();
  get_comments: (nat64) -> (vec Comment) query;
  edit_post: (nat64, text) -> (opt Post);
  delete_post: (nat64) -> (bool);

  follow_user: (principal) -> (FollowResponse);
  unfollow_user: (principal) -> (FollowResponse);
  get_following: (principal) -> (vec principal) query;
  get_followers: (principal) -> (vec principal) query;

  get_feed: () -> (vec Post) query;
  search_users: (text) -> (vec UserProfile) query;
  };

